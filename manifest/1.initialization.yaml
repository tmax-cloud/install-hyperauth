apiVersion: v1
kind: Namespace
metadata:
  name: hyperauth
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hyperauth-admin
  namespace: hyperauth
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  storageClassName: csi-cephfs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  ports:
  - port: 5432
    nodePort: 31226
  selector:
    app: postgresql
    tier: postgreSQL
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
        tier: postgreSQL
    spec:
      containers:
        - image: postgres:9.6.2-alpine
          name: postgresql
          env:
            - name: POSTGRES_USER
              value: keycloak
            - name: POSTGRES_DB
              value: keycloak
            - name: POSTGRES_PASSWORD
              value: keycloak
            - name: TZ
              value: Asia/Seoul
          resources:
            limits:
              cpu: "300m"
              memory: "300Mi"
            requests:
              cpu: "300m"
              memory: "300Mi"
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            - name: postgresql
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgresql
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: hyperauth
  namespace: hyperauth
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  selector:
    app: hyperauth
  type: LoadBalancer   # ClusterIP or LoadBalancer or NodePort

