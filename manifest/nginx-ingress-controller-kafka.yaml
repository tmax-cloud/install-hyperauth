apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: ingress-nginx-system-2.10.0
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/version: 0.33.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller
  namespace: ingress-nginx-system
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: kafka-1
      port: 9001
      protocol: TCP
    - name: kafka-2
      port: 9002
      protocol: TCP
    - name: kafka-3
      port: 9003
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
    
    
--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-system-2.10.0
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/version: 0.33.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller
  namespace: ingress-nginx-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-system
      app.kubernetes.io/instance: ingress-nginx-system
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-system
        app.kubernetes.io/instance: ingress-nginx-system
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.33.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-service=ingress-nginx-system/ingress-nginx-system-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx-system
            - --configmap=ingress-nginx-system/ingress-nginx-system-controller
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
            - --tcp-services-configmap=ingress-nginx-system/tcp-services
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: webhook
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: webhook-cert
              mountPath: /usr/local/certificates/
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 200m
              memory: 180Mi
      serviceAccountName: ingress-nginx-system
      terminationGracePeriodSeconds: 300
      volumes:
        - name: webhook-cert
          secret:
            secretName: ingress-nginx-system-admission
---
